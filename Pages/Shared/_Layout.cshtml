<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
        crossorigin="anonymous">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">

    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/styles.min.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ClassroomReservationSystem.styles.css" asp-append-version="true" />

    <style>
        body.dark-mode {
            background-color: #121212;
            color: #e0e0e0;
        }

        body.dark-mode a,
        body.dark-mode a.btn-lg.fixed-button {
            color: #f0c419; 
        }
        body.dark-mode .text-white {
            color: #e0e0e0 !important;
        }

        /* Dark mode table styles */
        body.dark-mode .table {
            color: #e0e0e0;
        }

        body.dark-mode .table-hover tbody tr:hover {
            background-color: rgba(255, 255, 255, 0.075);
            color: #e0e0e0;
        }

        body.dark-mode .table-light,
        body.dark-mode .table thead th {
            background-color: #2d2d2d;
            color: #e0e0e0;
            border-color: #404040;
        }

        /* Dark mode card styles */
        body.dark-mode .card {
            background-color: #1e1e1e;
            border-color: #404040;
        }

        body.dark-mode .card-header {
            background-color: #2d2d2d;
            border-bottom-color: #404040;
        }

        body.dark-mode .bg-light {
            background-color: #2d2d2d !important;
            color: #e0e0e0;
        }

        /* Keep colorful cards readable in dark mode */
        body.dark-mode .bg-primary,
        body.dark-mode .bg-info,
        body.dark-mode .bg-success,
        body.dark-mode .bg-danger {
            opacity: 0.9;
        }
        

        /* Dark mode form elements */
        body.dark-mode .form-control,
        body.dark-mode .form-select {
            background-color: #2d2d2d;
            border-color: #404040;
            color: #e0e0e0;
        }

        body.dark-mode .form-control:focus,
        body.dark-mode .form-select:focus {
            background-color: #2d2d2d;
            border-color: #505050;
            color: #e0e0e0;
        }

        /* Dark mode badges and status indicators */
        body.dark-mode .badge.bg-light {
            background-color: #2d2d2d !important;
            color: #e0e0e0 !important;
        }

        /* Dark mode borders */
        body.dark-mode .border-bottom {
            border-color: #404040 !important;
        }

        /* Transition effects */
        .card,
        .table,
        .form-control,
        .form-select,
        .badge {
            transition: background-color 0.3s ease, 
                        color 0.3s ease, 
                        border-color 0.3s ease;
        }

        .table-dark {
    --bs-table-color: #fff;
    --bs-table-bg: #2d2d2d;
    }:root {
  --bs-heading-color: #212529; /* koyu renk, siyaha yakın */
}

/* Dark mod için */
body.dark-mode {
  --bs-heading-color: #e0e0e0; /* açık renk, beyaza yakın */
}
body.dark-mode .pagination {
    --bs-pagination-color: #b0c4ff; /* Daha açık mavi */
    --bs-pagination-bg: #2c2c2c;
    --bs-pagination-border-color: #444;
    --bs-pagination-hover-color: #ffffff;
    --bs-pagination-hover-bg: #3a3a3a;
    --bs-pagination-hover-border-color: #555;
    --bs-pagination-focus-bg: #444;
    --bs-pagination-focus-box-shadow: 0 0 0 0.25rem rgba(100, 150, 255, 0.5);
    --bs-pagination-active-color: #ffffff;
    --bs-pagination-active-bg: #1e4db7;
    --bs-pagination-active-border-color: #1e4db7;
    --bs-pagination-disabled-color: #777;
    --bs-pagination-disabled-bg: #2c2c2c;
    --bs-pagination-disabled-border-color: #444;
}

    </style>
</head>

<body>
    @if (User.IsInRole("Admin") || User.IsInRole("Instructor"))
    {
        <header>
            <div class="app-topstrip bg-dark py-6 px-3 w-100 d-lg-flex align-items-center justify-content-between">
                <div class="d-flex align-items-center justify-content-center gap-5 mb-2 mb-lg-0">
                    <a class="d-flex justify-content-center" asp-page="/Index">
                        <img src="~/images/logo.png" alt="" width="50" >
                        <a class="text-white mb-2 mb-lg-0 fs-5 text-center" asp-page="/Index">ClassroomReservationSystem</a>
                    </a>
                </div>

                <h3 class="text-white mb-2 mb-lg-0 fs-5 text-center">@ViewData["Title"]</h3>
                
                <div class="d-flex align-items-center">
                    <button id="themeToggle" class="btn btn-link text-warning fs-4 me-3" title="Toggle Dark Mode" type="button">
                        <i class="bi bi-sun-fill"></i>
                    </button>

                    @if (User.Identity.IsAuthenticated)
                    {
                        <span class="text-white me-3">@User.Identity.Name</span>
                        <form asp-area="Identity" asp-page="/Account/Logout"
                            asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                            <button type="submit" class="btn btn-outline-light">Logout</button>
                        </form>
                    }
                    else
                    {
                        <a class="btn btn-outline-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
                    }
                </div>
            </div>
        </header>

        <div class="d-flex" style="padding-top:60px;">
            <nav class="bg-dark sidebar p-3 " style="min-width: 320px; height: 210vh;">
                <ul class="nav flex-column">

                    @if (User.IsInRole("Admin"))
                    {
                        <li class="nav-item p-1">
                            <a class="btn-lg  fixed-button " asp-page="/Admin/Dashboard">
                                Home
                            </a>
                        </li>                        
                        <li class="nav-item p-1">
                            <a class="btn-lg  fixed-button" asp-page="/Admin/Users/Index">
                                Manage Users
                            </a>
                        </li>
                        <li class="nav-item p-1">
                            <a class="btn-lg  fixed-button" asp-page="/Admin/AcademicTerms/Index">
                                Manage Academic Terms
                            </a>
                        </li>
                        <li class="nav-item p-1">
                            <a class="btn-lg  fixed-button" asp-page="/Admin/Reservations/Index" >
                                Manage Reservations
                            </a>
                        </li>
                        <li class="nav-item p-1 ">
                            <a class="btn-lg  fixed-button" asp-page="/Admin/Classrooms/Index">
                                Classrooms/Evaluations
                            </a>
                        </li>                       
                    }
                    @if (User.IsInRole("Instructor")){
                        <li class="nav-item p-1">
                            <a class="btn-lg  fixed-button " asp-page="/Instructor/Dashboard">
                                Home
                            </a>
                        </li>
                        
                    }
                </ul>
            </nav>

            <div class="container-fluid p-4">
                <main role="main" class="pb-3">
                    @RenderBody()
                </main>
            </div>
        </div>

        <footer class="footer mt-auto py-3 bg-dark">
            <div class="container text-center text-white">
                &copy; 2025 - ClassroomReservationSystem
            </div>
        </footer>
    }
    else
    {
        <div class="container mt-5">
            <main role="main" class="pb-3">
                @RenderBody()
            </main>
        </div>
    }

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        (function() {
            const toggleBtn = document.getElementById('themeToggle');
            const body = document.body;
            const icon = toggleBtn.querySelector('i');

            const savedTheme = localStorage.getItem('theme');
            if (savedTheme === 'dark') {
                body.classList.add('dark-mode');
                icon.classList.remove('bi-sun-fill');
                icon.classList.add('bi-moon-fill');
            } else {
                body.classList.remove('dark-mode');
                icon.classList.remove('bi-moon-fill');
                icon.classList.add('bi-sun-fill');
            }

            toggleBtn.addEventListener('click', () => {
                body.classList.toggle('dark-mode');
                const isDark = body.classList.contains('dark-mode');

                if (isDark) {
                    icon.classList.remove('bi-sun-fill');
                    icon.classList.add('bi-moon-fill');
                    localStorage.setItem('theme', 'dark');
                } else {
                    icon.classList.remove('bi-moon-fill');
                    icon.classList.add('bi-sun-fill');
                    localStorage.setItem('theme', 'light');
                }

                updateTableStyles(isDark);
            });

            function updateTableStyles(isDark) {
                const tables = document.querySelectorAll('.table');
                tables.forEach(table => {
                    if (isDark) {
                        table.classList.add('table-dark');
                        table.classList.remove('table-light');
                    } else {
                        table.classList.remove('table-dark');
                        table.classList.add('table-light');
                    }
                });
            }

            const initialIsDark = body.classList.contains('dark-mode');
            updateTableStyles(initialIsDark);
        })();
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>
